---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=< movie_api_key >&language=en&page=1&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 29 Aug 2021 18:46:55 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 02c9369a13a0231f798972c7b25a6fd1.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - Yf2N94cyUQsW-hhsTGishYt05g1yKzXap3KWLJ_TpHvVv2ZQEmyE-g==
      Age:
      - '134'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 29 Aug 2021 18:49:08 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=< movie_api_key >&language=en&page=2&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 29 Aug 2021 18:46:56 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 a91f9752f88d12f73d321bf3ae28a162.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - yTJpOzk4PYXuc8-K0xd4t2TYvKFstJ_zYq7_gZ1XZISTeEvGt8Xq5g==
      Age:
      - '133'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 29 Aug 2021 18:49:09 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie/?api_key=< movie_api_key >&page=1&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 29 Aug 2021 18:49:09 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Location:
      - http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=1&query=titanic
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 a6371b8cec3aa1a09908ecce0cfffa8e.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - YQwFjjvbmb8spqw4O_iLASs88UIxQ0puG4X9HVBMC86M4pKpA-13_w==
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Sun, 29 Aug 2021 18:49:09 GMT
- request:
    method: get
    uri: http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=1&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 29 Aug 2021 18:46:56 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 51c947a89f81287c4310dda23943d797.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - ZkMpLGC6j501jBQb55v2bXUs7LDAiSfDv76X2cYHdyD8MJEpETDgdA==
      Age:
      - '133'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 29 Aug 2021 18:49:09 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie/?api_key=< movie_api_key >&page=2&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 29 Aug 2021 18:49:09 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Location:
      - http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=2&query=titanic
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 64728acddeb290ea8e95d7ffd4d64ae2.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - lD8vN_xvVCS93um_eTTqiqqv7QH4mL2Rz5AcI6o3K6-d_TKJGwdBZA==
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Sun, 29 Aug 2021 18:49:09 GMT
- request:
    method: get
    uri: http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=2&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 29 Aug 2021 18:46:57 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 b53110859cfc7819470fe06f91c67857.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - r6DOqptvsVTaEJBLeXj3cB4nIXNsI1zv11_Ro6_h36VRSLFNJeK9Dw==
      Age:
      - '132'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 29 Aug 2021 18:49:09 GMT
recorded_with: VCR 6.0.0
