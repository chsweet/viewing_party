---
http_interactions:
- request:
    method: get
    uri: http://api.themoviedb.org/3/discover/movie?api_key=< movie_api_key >&language=en&page=1&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 31 Aug 2021 16:29:17 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 66651bffa749255769c1c4956851dc97.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - H29gU6e4J0D5WHzKz7xazv06qCzSuKBV7yxGO0v-jILz-PyzThzHMQ==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 31 Aug 2021 16:29:18 GMT
- request:
    method: get
    uri: http://api.themoviedb.org/3/discover/movie?api_key=< movie_api_key >&language=en&page=2&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 31 Aug 2021 16:29:17 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 c806365ba43eabe769161a7b339ff969.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - w19XGbzQxig8YzjuCVMz6liXeRnF_FiyQbuyBTmEOXJPPVfr9DlhDA==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 31 Aug 2021 16:29:18 GMT
- request:
    method: get
    uri: http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=1&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 31 Aug 2021 16:29:17 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 1cc54b4fe0d62c2eb8b264f37ef2aa5c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - YzDk0zcg3sDtlIrpm30AVxOn01HnXZ3h-VEpS-GY0oBglqyp3Ro4cg==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNlZtRnFBcFFSeVpaem1pR09RcTJDOTJqeXZILmpwZyIsImdlbnJlX2lkcyI6WzE4LDEwNzQ5XSwiaWQiOjU5Nywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGl0YW5pYyIsIm92ZXJ2aWV3IjoiMTAxLXllYXItb2xkIFJvc2UgRGVXaXR0IEJ1a2F0ZXIgdGVsbHMgdGhlIHN0b3J5IG9mIGhlciBsaWZlIGFib2FyZCB0aGUgVGl0YW5pYywgODQgeWVhcnMgbGF0ZXIuIEEgeW91bmcgUm9zZSBib2FyZHMgdGhlIHNoaXAgd2l0aCBoZXIgbW90aGVyIGFuZCBmaWFuY8OpLiBNZWFud2hpbGUsIEphY2sgRGF3c29uIGFuZCBGYWJyaXppbyBEZSBSb3NzaSB3aW4gdGhpcmQtY2xhc3MgdGlja2V0cyBhYm9hcmQgdGhlIHNoaXAuIFJvc2UgdGVsbHMgdGhlIHdob2xlIHN0b3J5IGZyb20gVGl0YW5pYydzIGRlcGFydHVyZSB0aHJvdWdoIHRvIGl0cyBkZWF0aOKAlG9uIGl0cyBmaXJzdCBhbmQgbGFzdCB2b3lhZ2XigJRvbiBBcHJpbCAxNSwgMTkxMi4iLCJwb3B1bGFyaXR5IjoxMDQuODE2LCJwb3N0ZXJfcGF0aCI6Ii85eGpaUzJybFZ4bThTRng4a1BDM2FJR0NPWVEuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk5Ny0xMS0xOCIsInRpdGxlIjoiVGl0YW5pYyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjksInZvdGVfY291bnQiOjE5Njc1fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9lOVhSaWtreXRoMEd0RzhSa1UzWE5tMG9Nc0EuanBnIiwiZ2VucmVfaWRzIjpbMjgsMTIsNTNdLCJpZCI6NDQ5MTgsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRpdGFuaWMgSUkiLCJvdmVydmlldyI6Ik9uIHRoZSAxMDB0aCBhbm5pdmVyc2FyeSBvZiB0aGUgb3JpZ2luYWwgdm95YWdlLCBhIG1vZGVybiBsdXh1cnkgbGluZXIgY2hyaXN0ZW5lZCBcIlRpdGFuaWMgMixcIiBmb2xsb3dzIHRoZSBwYXRoIG9mIGl0cyBuYW1lc2FrZS4gQnV0IHdoZW4gYSB0c3VuYW1pIGh1cmxzIGFuIGljZSBiZXJnIGludG8gdGhlIG5ldyBzaGlwJ3MgcGF0aCwgdGhlIHBhc3NlbmdlcnMgYW5kIGNyZXcgbXVzdCBmaWdodCB0byBhdm9pZCBhIHNpbWlsYXIgZmF0ZS4iLCJwb3B1bGFyaXR5Ijo1NC4yNjEsInBvc3Rlcl9wYXRoIjoiLzNiaHY2c2YzUThEM3RiVXZ0UENDaDN2ZFl5QS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEwLTA4LTA3IiwidGl0bGUiOiJUaXRhbmljIElJIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjQuOSwidm90ZV9jb3VudCI6MjU3fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii8zb1Noc1J2QXlaaVFRNWxQMmhzeldOOVJpMGIuanBnIiwiZ2VucmVfaWRzIjpbMjgsMTgsMTA3NDldLCJpZCI6MTY1MzUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRpdGFuaWMiLCJvdmVydmlldyI6IlVuaGFwcGlseSBtYXJyaWVkLCBKdWxpYSBTdHVyZ2VzIGRlY2lkZXMgdG8gZ28gdG8gQW1lcmljYSB3aXRoIGhlciB0d28gY2hpbGRyZW4gb24gdGhlIHVuc2lua2FibGUgVGl0YW5pYy4gSGVyIGh1c2JhbmQsIFJpY2hhcmQgYWxzbyBhcnJhbmdlcyBwYXNzYWdlIG9uIHRoZSBsdXh1cnkgbGluZXIgc28gYXMgdG8gaGF2ZSBjdXN0b2R5IG9mIHRoZWlyIHR3byBjaGlsZHJlbi4gQWxsIHRoaXMgZmFkZXMgdG8gaW5zaWduaWZpY2FuY2Ugb25jZSB0aGUgc2hpcCBoaXRzIGFuIGljZWJlcmcuIiwicG9wdWxhcml0eSI6MTQuODcsInBvc3Rlcl9wYXRoIjoiLzIyRmg0VW94UDZlakwySUZ3czc2VEo4b1lsai5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTUzLTA0LTExIiwidGl0bGUiOiJUaXRhbmljIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNCwidm90ZV9jb3VudCI6NzZ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzgydFJBN1ZkZjdUd2R5SllJTFVoNkZ1WTg4TC5qcGciLCJnZW5yZV9pZHMiOls5OV0sImlkIjoxOTg5MDEsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRpdGFuaWM6IDEwMCBZZWFycyBPbiIsIm92ZXJ2aWV3IjoiVGhlIFwidW5zaW5rYWJsZVwiIGZsb2F0aW5nIHBhbGFjZSBzZXQgc2FpbCBmcm9tIFNvdXRoYW1wdG9uIG9uIDEwdGggQXByaWwgMTkxMiBvbiBoZXIgbWFpZGVuIHZveWFnZSB0byBOZXcgWW9yay4gQW4gaWNlYmVyZyBlbmRlZCB0aGlzIG1vbnVtZW50YWwgam91cm5leSA1IGRheXMgbGF0ZXIuIE9ubHkgNzA1IG9mIHRoZSBwYXNzZW5nZXJzIGFuZCBjcmV3IHN1cnZpdmVkLiBUaGlzIHByb2dyYW0gZmVhdHVyZXMgYW4gZXhjbHVzaXZlIGxvb2sgYXQgdGhlIFNlYSBDaXR5IE11c2V1bSBUaXRhbmljIEV4aGliaXQgaW4gU291dGhhbXB0b24sIGludGVydmlld3MgZnJvbSBib3RoIHN1cnZpdm9ycyBhbmQgdGhlIGNhc3Qgb2YgdGhlIGJsb2NrYnVzdGVyIGZpbG0uIiwicG9wdWxhcml0eSI6MjUuMDQsInBvc3Rlcl9wYXRoIjoiL3VBYVhmYUpwS2ptc0EzRjFLZ293Y1JKUEtQTS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEyLTA2LTAxIiwidGl0bGUiOiJUaXRhbmljOiAxMDAgWWVhcnMgT24iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni45LCJ2b3RlX2NvdW50IjoxOH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvZWRIZ1hFdFBieVZJUTd4S2IxY3ZKSnFUVmhBLmpwZyIsImdlbnJlX2lkcyI6WzI4LDE4LDM2XSwiaWQiOjExMDIxLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImRlIiwib3JpZ2luYWxfdGl0bGUiOiJUaXRhbmljIiwib3ZlcnZpZXciOiJUaGlzIGxpdHRsZS1rbm93biBHZXJtYW4gZmlsbSByZXRlbGxzIHRoZSB0cnVlIHN0b3J5IG9mIHRoZSBCcml0aXNoIG9jZWFuIGxpbmVyIHRoYXQgbWV0IGEgdHJhZ2ljIGZhdGUuIEVybnN0IEZyaXR6IEbDvHJicmluZ2VyIHBsYXlzIHRoZSBwcmVzaWRlbnQgb2YgdGhlIFdoaXRlIFN0YXIgTGluZSwgd2hvIHVud2lzZWx5IHByZXNzZWQgdGhlIFRpdGFuaWMncyBjYXB0YWluIChPdHRvIFdlcm5pY2tlKSB0byBtYWtlIHRoZSBzd2lmdGVzdCBwb3NzaWJsZSBjcm9zc2luZyB0byBOZXcgWW9yay4gSW50ZXJlc3RpbmdseSwgZGlyZWN0b3IgSGVyYmVydCBTZWxwaW4gd2FzIGFycmVzdGVkIGJ5IHRoZSBHZXN0YXBvIGR1cmluZyB0aGlzIGZpbG0ncyBwcm9kdWN0aW9uLCBhbmQgR2VybWFuIGNlbnNvcnMgYmFubmVkIHRoZSBmaWxtIGZvciBpdHMgc2NlbmVzIG9mIHBhbmljIGFuZCB0ZXJyb3IuIiwicG9wdWxhcml0eSI6Ni4xLCJwb3N0ZXJfcGF0aCI6Ii9BbDdvSVhRNGRaQW9mQlRaV202T2lYUzNNRWEuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk0My0xMS0xMCIsInRpdGxlIjoiVGl0YW5pYyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LCJ2b3RlX2NvdW50Ijo0Mn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzM1LDI3XSwiaWQiOjQyNDAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRpdGFuaWMgMjAwMCIsIm92ZXJ2aWV3IjoiVGhlIGx1eHVyeSBsaW5lciBUaXRhbmljIDIwMDAgaGFzIHNldCBzYWlsIG9uIGl0cyBtYWlkZW4gdm95YWdlLCBhbmQgb25lIG9mIHRoZSBwYXNzZW5nZXJzIGlzIHRoZSB2YW1waXJlIFZsYWRhbWluYS4gVmxhZGFtaW5hIGlzIHNlYXJjaGluZyBmb3IgYSB3b21hbiBzaGUgY2FuIHR1cm4gaW50byBhIHZhbXBpcmUgcXVlZW4sIGFuZCBmcnVzdHJhdGVkIHJvY2sgZ3JvdXBpZSBTaGFyaSBsb29rcyB0byBiZSBhIHBlcmZlY3QgdGFyZ2V0LiBBcyB2YXJpb3VzIHBlb3BsZSBnZXQgc2VkdWNlZCBhbmQvb3Iga2lsbGVkIGFzIHRoZSBsaW5lciBjb250aW51ZXMgb24gaXRzIGRvb21lZCB2b3lhZ2UsIFNoYXJpIG11c3QgY2hvc2UgYmV0d2VlbiBldGVybml0eSBhcyBhIGxpdmluZyBkZWFkIHNleCBzbGF2ZSBvciBhIGZyaWdpZCBncmF2ZSBhdCB0aGUgYm90dG9tIG9mIHRoZSBvY2Vhbi4iLCJwb3B1bGFyaXR5Ijo4LjUxOCwicG9zdGVyX3BhdGgiOiIvdzhLekdwaFNHSURjVWhIbWRSYnF4WVhJOGtlLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5OTktMDEtMDEiLCJ0aXRsZSI6IlRpdGFuaWMgMjAwMCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjozLjQsInZvdGVfY291bnQiOjh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3EzYjhWaTJXNmo3MmFYS2dnaVZvRG5FeURnVS5qcGciLCJnZW5yZV9pZHMiOlsxMl0sImlkIjoyNDU3NSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiUmFpc2UgdGhlIFRpdGFuaWMiLCJvdmVydmlldyI6IlRvIG9idGFpbiBhIHN1cHBseSBvZiBhIHJhcmUgbWluZXJhbCwgYSBzaGlwIHJhaXNpbmcgb3BlcmF0aW9uIGlzIGNvbmR1Y3RlZCBmb3IgdGhlIG9ubHkga25vd24gc291cmNlLCB0aGUgVGl0YW5pYy4iLCJwb3B1bGFyaXR5Ijo5Ljg3OSwicG9zdGVyX3BhdGgiOiIvYmVZTkxqNDRGT2RWNDd0b21YdUp5UGt2Q0tsLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5ODAtMDgtMDEiLCJ0aXRsZSI6IlJhaXNlIHRoZSBUaXRhbmljIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUuNiwidm90ZV9jb3VudCI6NTZ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3hTc3NXNTNhMnMyZXVDZHlJNGFFcHp5WmZiMS5qcGciLCJnZW5yZV9pZHMiOls4NzgsMjgsMTIsMzVdLCJpZCI6NDY3ODM5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJBbGllbnMgdnMuIFRpdGFuaWMiLCJvdmVydmlldyI6Ik9mZmVyaW5nIG9ubHkgdGhlIGZpbmVzdCBhbWVuaXRpZXMsIHRoZSDigJhUSVRBTiAxQ+KAmSBzcGFjZS1jcnVpc2VyIGlzIGNvbnNpZGVyZWQgdGhlIG1vc3QgbHV4dXJpb3VzIHN0YXItbGluZXIgZXZlciBidWlsdC4gRnV0dXJlIHNwcmluZy1icmVha2VycyBvbiBib2FyZCBhcmUgZXhjaXRlZCB0byBiZSB0b3VyaW5nIHRocm91Z2ggc3BhY2Ugd2l0aCBzb21lIG9mIHRoZSB3b3JsZOKAmXMgZWxpdGUuIEhvd2V2ZXIsIGEgc3VkZGVuIG1ldGVvciBzdG9ybSBzbWFzaGVzIGludG8gdGhlIGh1bGwsIGFuZCBhIGRlYWRseSBiaW9sb2dpY2FsIGFsaWVuIGxpZmUgZm9ybSBpcyBsZXQgbG9vc2Ugb24gdGhlIHNoaXAuICBTZWVraW5nIGEgc3VpdGFibGUgaG9zdCwgdGhlIHJldHJvdmlydXMgc3VjY2Vzc2Z1bGx5IG1lcmdlcyB3aXRoIHNvbWUgdGhlIHBhc3NlbmdlcnMsIHRyYW5zZm9ybWluZyB0aGVtIGludG8gc2VlbWluZ2x5IGludmluY2libGUgcHJlZGF0b3JzIHdpdGggdGhlIOKAnHRvdWNoIG9mIGRlYXRo4oCdLiBBcyB0aGUgc2hpcCBpcyBkZXN0cm95ZWQsIHRoZSBzdXJ2aXZpbmcgcGFzc2VuZ2VycyBjcmFzaCBvbiBhIHJlbW90ZSBwbGFuZXQsIGFuZCB0aGV5IGxlYXJuIHRoYXQgb25lIG9mIHRoZW0gaXMg4oCcaW5mZWN0ZWTigJ0uIFRoZXkgbXVzdCBxdWlja2x5IGJhbmQgdG9nZXRoZXIgYmVmb3JlIGl0IGhhcyBhIGNoYW5jZSB0byBzbGF1Z2h0ZXIgdGhlbSBhbGwuIiwicG9wdWxhcml0eSI6OC4wNTQsInBvc3Rlcl9wYXRoIjoiL2JsUkVPZDA1aHl2YmlBM1FjNkJxQ0o3dW52Qy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE3LTA5LTE4IiwidGl0bGUiOiJBbGllbnMgdnMuIFRpdGFuaWMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NC45LCJ2b3RlX2NvdW50IjoxMn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNFNkZHcxQkZRRkhPSVFaM0RZN1FTMG1HblZlLmpwZyIsImdlbnJlX2lkcyI6WzE2LDEwNzUxXSwiaWQiOjcxMjM1LCJvcmlnaW5hbF9sYW5ndWFnZSI6Iml0Iiwib3JpZ2luYWxfdGl0bGUiOiJUaXRhbmljOiBMYSBsZWdnZW5kYSBjb250aW51YSIsIm92ZXJ2aWV3IjoiQW4gYW5pbWF0ZWQgcmV0ZWxsaW5nIG9mIHRoZSB3b3JzdCBwYXNzZW5nZXIgc2hpcCBkaXNhc3RlciBpbiBoaXN0b3J5LiBJbiB0aGlzIHZlcnNpb24sIGxvdmUgYmxvc3NvbXMgYmV0d2VlbiB0aGUgdXBwZXItY2xhc3MgU2lyIFdpbGxpYW0gYW5kIHRoZSBibHVlLWNvbGxhciBBbmdlbGljYSwgd2hvIGlzIGhvcGluZyB0byBmaW5kIHJvbWFuY2UgaW4gQW1lcmljYS4gQXQgdGhlIHNhbWUgdGltZSwgdGhlcmUgYXJlIGFsc28gYSBudW1iZXIgb2YgYW5pbWFsIHBhc3NlbmdlcnMsIGluY2x1ZGluZyB0YWxraW5nIGRvZ3MsIGNhdHMgYW5kIG1pY2UsIHdobyBhcmUgYWxzbyBsb29raW5nIGZvcndhcmQgdG8gYXJyaXZpbmcgaW4gdGhlIE5ldyBXb3JsZC4iLCJwb3B1bGFyaXR5Ijo3LjY3LCJwb3N0ZXJfcGF0aCI6Ii9zMVBIUlNsb3MyaElGcnRBOFplMEp5YkpUR2IuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwMC0wOS0xNSIsInRpdGxlIjoiVGl0YW5pYzogVGhlIExlZ2VuZCBHb2VzIE9uLi4uIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjIuMSwidm90ZV9jb3VudCI6NDR9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3NkdGZ3WnVsRXJiUTd5OVJWYmFPdVdWb3VENi5qcGciLCJnZW5yZV9pZHMiOlszNiwxOCw1M10sImlkIjo4NjkzOCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiUy5PLlMuIFRpdGFuaWMiLCJvdmVydmlldyI6IlRoZSBUaXRhbmljIGRpc2FzdGVyIGlzIGRlcGljdGVkIGFzIHNlZW4gdGhyb3VnaCB0aGUgZXllcyBvZiBvbmUgY291cGxlIGluIGVhY2ggb2YgdGhlIHRocmVlIGNsYXNzZXMgb24gYm9hcmQuIiwicG9wdWxhcml0eSI6NC45ODgsInBvc3Rlcl9wYXRoIjoiL3d5NXV0MkdWcFBhTnh4WEZSZGtJeXdqUnBlTy5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTc5LTA5LTIzIiwidGl0bGUiOiJTLk8uUy4gVGl0YW5pYyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjIsInZvdGVfY291bnQiOjI0fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9oRGZhYTNOajNLM1NrWEJyOGVBTFlmUFQ1cEYuanBnIiwiZ2VucmVfaWRzIjpbOTldLCJpZCI6NDI4OTUwLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJEcmFpbiB0aGUgVGl0YW5pYyIsIm92ZXJ2aWV3IjoiQ29tcHV0ZXItZ2VuZXJhdGVkIGltYWdlcnkgYW5kIG90aGVyIHZpc3VhbGl6YXRpb24gdGVjaG5pcXVlcyByZXZlYWwgaG93IGl0IHdvdWxkIGxvb2sgaWYgYWxsIHRoZSB3YXRlciB3YXMgcmVtb3ZlZCBmcm9tIFJNUyBUaXRhbmljJ3MgZmluYWwgcmVzdGluZyBwbGFjZS4iLCJwb3B1bGFyaXR5Ijo1LjQ2NCwicG9zdGVyX3BhdGgiOiIvNjhGcHBzbnBjM09tUUs4a0l1c3RmZnJ4SGJxLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTYtMDUtMDUiLCJ0aXRsZSI6IkRyYWluIHRoZSBUaXRhbmljIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuMywidm90ZV9jb3VudCI6MTB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOls5OSwzNl0sImlkIjo1MzAxMDgsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBVbnNpbmthYmxlIFRpdGFuaWMiLCJvdmVydmlldyI6Ik9uIEFwcmlsIDEwLCAxOTEyLCB0aGUgUk1TIFRpdGFuaWMgZW1iYXJrZWQgb24gaXRzIG1haWRlbiB2b3lhZ2UsIHNhaWxpbmcgZnJvbSBTb3V0aGFtcHRvbiwgRW5nbGFuZCwgdG8gTmV3IFlvcmsgQ2l0eS4gT25lIG9mIHRoZSBsYXJnZXN0IGFuZCBtb3N0IGx1eHVyaW91cyBwYXNzZW5nZXIgbGluZXJzIGF0IHRoZSB0aW1lLCB0aGUgVGl0YW5pYyB3YXMgYWxzbyBlcXVpcHBlZCB3aXRoIHdhdGVydGlnaHQgY29tcGFydG1lbnRzLCB3aGljaCBsZWQgbWFueSB0byBjb25zaWRlciB0aGUgc2hpcCB1bnNpbmthYmxlOyBhbiBhbm9ueW1vdXMgZGVja2hhbmQgZmFtb3VzbHkgY2xhaW1lZCB0aGF0IOKAnEdvZCBoaW1zZWxmIGNvdWxkIG5vdCBzaW5rIHRoaXMgc2hpcC7igJ0gT24gQXByaWwgMTQsIGhvd2V2ZXIsIHRoZSBzaGlwIHN0cnVjayBhbiBpY2ViZXJnLCBhbmQgZWFybHkgdGhlIG5leHQgZGF5IGl0IHNhbmsuIFNvbWUgMSw1MDAgcGVvcGxlIHBlcmlzaGVkLiIsInBvcHVsYXJpdHkiOjUuMTI4LCJwb3N0ZXJfcGF0aCI6Ii9tM3B5MUpvT1BNM3MzUlRSdjk2NXRNQzhGcXkuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwOC0xMS0wMyIsInRpdGxlIjoiVGhlIFVuc2lua2FibGUgVGl0YW5pYyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo5LCJ2b3RlX2NvdW50IjoxfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbOTldLCJpZCI6NDIxNjU3LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJJbnNpZGUgdGhlIFRpdGFuaWMiLCJvdmVydmlldyI6IkFuIGFtYml0aW91cyBmYWN0dWFsIGRyYW1hIHRoYXQgcmV2ZWFscyBtb21lbnQgYnkgbW9tZW50IGV4YWN0bHkgaG93IHRoZSBUaXRhbmljIHNhbmssIHRlbGxpbmcgdGhlIHVudG9sZCBzdG9yaWVzIG9mIHRoZSBlbmdpbmVlcnMgYW5kIHN0b2tlcnMgd2hvIGJhdHRsZWQgdGhlIGljeSB3YXRlci4iLCJwb3B1bGFyaXR5IjozLjY1LCJwb3N0ZXJfcGF0aCI6Ii9qREhlb3JSV0x1enlYU1VHVlg0N09TZFd2Vk0uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxMi0wMy0yMiIsInRpdGxlIjoiSW5zaWRlIHRoZSBUaXRhbmljIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuNSwidm90ZV9jb3VudCI6Mn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvZGpGV0NldGhUTll6NVdQcUlzbzZJVlhUdEZVLmpwZyIsImdlbnJlX2lkcyI6WzEwNzQ5LDE4XSwiaWQiOjExNTg3Miwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJmciIsIm9yaWdpbmFsX3RpdGxlIjoiTGEgZmVtbWUgZGUgY2hhbWJyZSBkdSBUaXRhbmljIiwib3ZlcnZpZXciOiJIb3J0eSwgYSBGcmVuY2ggZm91bmRyeSB3b3JrZXIsIHdpbnMgYSBjb250ZXN0IGFuZCBpcyBzZW50IHRvIHNlZSB0aGUgc2FpbGluZyBvZiB0aGUgVGl0YW5pYy4gSW4gRW5nbGFuZCwgTWFyaWUsIHNheWluZyBzaGUgaXMgYSBjaGFtYmVybWFpZCBvbiB0aGUgVGl0YW5pYyBhbmQgY2Fubm90IGdldCBhIHJvb20sIGFza3MgdG8gc2hhcmUgaGlzIHJvb20uIFRoZXkgZG8sIGNoYXN0ZWx5OyB3aGVuIGhlIGF3YWtlbnMsIHNoZSBpcyBnb25lLCBidXQgaGUgc2VlcyBoZXIgYXQgdGhlIHNhaWxpbmcgYW5kIGdldHMgYSBwaG90byBvZiBoZXIuIFdoZW4gaGUgcmV0dXJucyBob21lLCBoZSBzdXNwZWN0cyB0aGF0IGhpcyB3aWZlIFpvZSBoYXMgYmVlbiBzbGVlcGluZyB3aXRoIFNpbWVvbiwgdGhlIGZvdW5kcnkgb3duZXIuIEhvcnR5IGdvZXMgdG8gdGhlIGJhciwgd2hlcmUgaGlzIGZyaWVuZHMgZ2V0IGhpbSBkcnVuayBhbmQgaGUgc3RhcnRzIHRlbGxpbmcgYW4gZXJvdGljIGZhbnRhc3kgb2Ygd2hhdCBoYXBwZW5lZCB3aXRoIGhpbSBhbmQgTWFyaWUsIGRyYXdpbmcgYSBsYXJnZXIgYXVkaWVuY2UgZWFjaCBuaWdodC4iLCJwb3B1bGFyaXR5Ijo0LjMxLCJwb3N0ZXJfcGF0aCI6Ii9tTVBFRDN6bjc4NmprSUQ3VFd0TFB0M1dNeVIuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk5Ny0xMC0xMCIsInRpdGxlIjoiVGhlIENoYW1iZXJtYWlkIG9uIHRoZSBUaXRhbmljIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuMSwidm90ZV9jb3VudCI6MTZ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzlQb2xWb2dadUhkMDdKSVBPUFREbkZBRmoxcC5qcGciLCJnZW5yZV9pZHMiOls5OV0sImlkIjo0ODk0OTMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRpdGFuaWM6IDIwIFllYXJzIExhdGVyIHdpdGggSmFtZXMgQ2FtZXJvbiIsIm92ZXJ2aWV3IjoiRm9yIHRoZSAyMHRoIGFubml2ZXJzYXJ5IG9mIFwiVGl0YW5pYyxcIiBKYW1lcyBDYW1lcm9uIHJlb3BlbnMgdGhlIGZpbGUgb24gdGhlIGRpc2FzdGVyLiIsInBvcHVsYXJpdHkiOjYuNDQ3LCJwb3N0ZXJfcGF0aCI6Ii81dzE4UDhxVTlzSFJjVzZwSDNOVkdWVklLRncuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNy0xMS0yNiIsInRpdGxlIjoiVGl0YW5pYzogMjAgWWVhcnMgTGF0ZXIgd2l0aCBKYW1lcyBDYW1lcm9uIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuMywidm90ZV9jb3VudCI6MjN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOltdLCJpZCI6NzYwNTI0LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaXRhbmljIiwib3ZlcnZpZXciOiJcIlRpdGFuaWNcIiBpcyBhIFB1bmphYmkgZmVhdHVyZSBmaWxtLiBJdCBpcyBmYW1pbHkgbW92aWUuIFwiVGl0YW5pY1wiIGlzIGJhc2VkIG9uIGEgeW91bmcgYm95J3MgbGlmZSB3aG9zZSBkcmVhbXMgYXJlIHNvIGhpZ2guIEhlIHdhbnRzIHRvIGpvaW4gSW5kaWFuIE5hdnkuIFVuZm9ydHVuYXRlbHkgaGlzIGxpZmUgY29tcGxldGVseSBjaGFuZ2VkIGR1ZSB0byB3ZWVrIGZpbmFuY2lhbCBjb25kaXRpb25zIGF0IGhvbWUuIEhlIHN0YXJ0cyBoaXMgd29yayBhdCBsb3cgbGV2ZWwgZHJpdmluZyBvZiBBdXRvcmlrc2hhLiBIZSB3b3JrcyBzbyBoYXJkIGFuZCBoZSBmYWNlcyBtYW55IG9ic3RhY2xlcyBpbiB0aGlzIHdvcmsuIEF0IHRoZSBlbmQgaGUgYWNjZXB0ZWQgdGhhdCBoaXMgdmVoaWNsZSBpcyBzdWJtYXJpbmUgZm9yIGhpbS4iLCJwb3B1bGFyaXR5IjoyLjAzMSwicG9zdGVyX3BhdGgiOm51bGwsInJlbGVhc2VfZGF0ZSI6IjIwMTgtMTItMjEiLCJ0aXRsZSI6IlRpdGFuaWMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvbUVvVTcxZzBTalRERWlNVHlSajFiVjJFZklwLmpwZyIsImdlbnJlX2lkcyI6Wzk5XSwiaWQiOjIxMzM2Miwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiUmVmbGVjdGlvbnMgb24gVGl0YW5pYyIsIm92ZXJ2aWV3IjoiQW4gZW50aHJhbGxpbmcgYW5kIGZhc3QtcGFjZWQgZm91ci1wYXJ0IGRvY3VtZW50YXJ5IGZlYXR1cmUgdGhhdCBjb3ZlcnMgdGhlIG1ha2luZyBvZiBvbmUgb2YgdGhlIGxhc3QgbWFqb3IgSG9sbHl3b29kIGVwaWNzOyBUaXRhbmljLiBDYXN0IGFuZCBjcmV3IHNwZWFrIG9uIHNldHRpbmcgdGhlIHNpbmtpbmcgb2YgdGhlIHNoaXAgYWdhaW5zdCBhIGNsYXNzaWMgcm9tYW5jZS4gVGhlIGZlYXR1cmUgYWxzbyBleGFtaW5lcyBjYXN0aW5nIGFuZCB0aGUgeW91bmcgY291cGxlIGhlYWRsaW5pbmcgdGhlIGZpbG0sIERpQ2FwcmlvJ3MgYW5kIFdpbnNsZXQncyBvbi1zZXQgZnJpZW5kc2hpcCBhbmQgdGhlaXIgZGlmZmVyaW5nIGFjdGluZyBzdHlsZXMsIHRoZSBleHBhbnNpdmUgc2V0cyBhbmQgZmlsbWluZyBsb2NhdGlvbnMsIHRoZSBhdXRoZW50aWNpdHkgb2YgdGhlIHJlY3JlYXRlZCBzaGlwLCBKYW1lcyBDYW1lcm9uJ3Mgd29yayBhbmQgZGVkaWNhdGlvbiwgYW5kIGJ1ZGdldGluZy4gQW5kIG1hbnkgbW9yZSBhc3BlY3RzIG9mIHRoZSBmaWxtIGFyZSBvdmVydmlld2VkLiIsInBvcHVsYXJpdHkiOjMuNDA3LCJwb3N0ZXJfcGF0aCI6bnVsbCwicmVsZWFzZV9kYXRlIjoiMjAxMi0wOS0xMCIsInRpdGxlIjoiUmVmbGVjdGlvbnMgb24gVGl0YW5pYyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjMsInZvdGVfY291bnQiOjE4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbMThdLCJpZCI6MzU3NTE3LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImRlIiwib3JpZ2luYWxfdGl0bGUiOiJUaXRhbmljIiwib3ZlcnZpZXciOiIiLCJwb3B1bGFyaXR5IjoxLjIwNiwicG9zdGVyX3BhdGgiOiIveWk3M21lNkpsM3pEZWxTOXBRSzVqdE1SaHNjLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5ODQtMDEtMDEiLCJ0aXRsZSI6IlRpdGFuaWMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Nywidm90ZV9jb3VudCI6MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzEwNzcwLDk5XSwiaWQiOjQ2MzM5Nywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTmF6aSBUaXRhbmljIiwib3ZlcnZpZXciOiJEdXJpbmcgYSBiaXphcnJlIGNoYXB0ZXIgb2YgV1dJSSwgTmF6aSBwcm9wYWdhbmRhIG1pbmlzdGVyIEpvc2VwaCBHb2ViYmVscyBkZWNpZGVkIHRvIG1ha2UgYSBtb3ZpZSBiYXNlZCBvbiB0aGUgc2lua2luZyBvZiB0aGUgVGl0YW5pYy4gVGhpcyBlcGljIGZpbG0gd2FzIHNvIGxhcmdlIGluIHNjYWxlIHRoYXQgdGhlIE5hemlzIHdlcmUgZm9yY2VkIHRvIGRpdmVydCBtZW4sIG1hdGVyaWFsIGFuZCBzaGlwcyBmcm9tIHRoZSB3YXIgZWZmb3J0IGluIG9yZGVyIHRvIGNvbXBsZXRlIGl0LiBUaXRhbmljIHdhcyBmaWxtZWQgYWJvYXJkIGNydWlzZSBzaGlwIFNTIENhcCBBcmNvbmEgaW4gdGhlIEJhbHRpYyBTZWEuIFRoZSBtb3ZpZeKAmXMgZGlyZWN0b3IgSGVyYmVydCBTZWxwaW4gd2FzIGFycmVzdGVkIGJ5IHRoZSBHZXN0YXBvIG92ZXIgY29tbWVudHMgaGUgbWFkZSBhYm91dCB0aGUgc2hpcOKAmXMgY3JldyBhbmQgaGUgd2FzIHF1ZXN0aW9uZWQgYnkgR29lYmJlbHMuIFNlbHBpbiB3YXMgZm91bmQgZGVhZCB0aGUgbmV4dCBkYXkgaW4gaGlzIGNlbGwuIFRoZSBHZXN0YXBv4oCZcyB2ZXJkaWN0IHdhcyBzdWljaWRlLiBUaXRhbmljIG5ldmVyIHJlY2VpdmVkIHRoZSBpbXByZXNzaXZlIHByZW1pZXJlIHRoYXQgR29lYmJlbHMgaW50ZW5kZWQsIGJlaW5nIGZpcnN0IHNob3duIGluIE5hemktb2NjdXBpZWQgUGFyaXMgaW4gMTk0My4gV2UgcmV2ZWFsIHRoaXMgbGl0dGxlIGtub3duIGJ1dCBmYXNjaW5hdGluZyBzdG9yeSBieSBsb29raW5nIGF0IHRoZSBtYWtpbmcgb2YgdGhlIGZpbG0sIGFzIHdlbGwgYXMgdGhlIGZhdGUgb2YgdGhlIEdlcm1hbiBzaGlwIENhcCBBcmNvbmEuIiwicG9wdWxhcml0eSI6MS42MjYsInBvc3Rlcl9wYXRoIjoiL3BtQ25WQVAwZFF1bXlETWdDbnpFZ25wTXQxZy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEyLTA0LTE0IiwidGl0bGUiOiJOYXppIFRpdGFuaWMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Nywidm90ZV9jb3VudCI6M30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzE4XSwiaWQiOjgzMDM2LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaXRhbmljIFRvd24iLCJvdmVydmlldyI6IkJlbGZhc3QgMTk3MjogVGhlIHBvbGl0aWNhbGx5IG5haXZlIEJlcm5pZSBpcyB0cnlpbmcgdG8gYnJpbmcgdXAgYSBub3JtYWwgZmFtaWx5IGluIGxlc3MgdGhhbiBub3JtYWwgc3Vycm91bmRpbmdzLiBIZXIgYmVzdCBmcmllbmQgaXMgYWNjaWRlbnRhbGx5IHNob3QgZGVhZCBieSB0aGUgSVJBLCBhbmQgaGVyIG5laWdoYm91cnMgYXJlIGNvbnN0YW50bHkgcmFpZGVkIGJ5IHRoZSBhcm15LiBJbiB0aGlzIGNsaW1hdGUgb2YgZmVhciBzaGUgc3RhbmRzIHVwIGFuZCBjb25kZW1ucyB0aGUgbXVyZGVycy4gQ3JpdGljaXNpbmcgYm90aCBmYWN0aW9ucywgaGVyIGNhbGwgZm9yIGEgY2Vhc2VmaXJlIGlzIGludGVycHJldGVkIGFzIGFuIGF0dGFjayBhZ2FpbnN0IHRoZSBJUkEsIGFuZCBhcyBoZXIgcGVhY2UgbW92ZW1lbnQgdGFrZXMgbW9tZW50dW0sIHNoZSBhbmQgaGVyIGZhbWlseSBhcmUgcGxhY2VkIGluIHRoZSBmcm9udGxpbmUuIiwicG9wdWxhcml0eSI6Mi4xMjQsInBvc3Rlcl9wYXRoIjoiLzhnbDJhZWltQW5nc1JIcVpRd1VLeXA5M0JkeC5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTk4LTA4LTA4IiwidGl0bGUiOiJUaXRhbmljIFRvd24iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MSwidm90ZV9jb3VudCI6MX1dLCJ0b3RhbF9wYWdlcyI6NywidG90YWxfcmVzdWx0cyI6MTM0fQ==
  recorded_at: Tue, 31 Aug 2021 16:29:18 GMT
- request:
    method: get
    uri: http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=2&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 31 Aug 2021 16:29:17 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 a363cb2607688e592410896234cdb47d.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - TjXl8Nl2tY_sRuQPAvKlKuCPjtyBDZXA-wixdjpLbnE2k0ghC7Xd_g==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 31 Aug 2021 16:29:18 GMT
recorded_with: VCR 6.0.0
