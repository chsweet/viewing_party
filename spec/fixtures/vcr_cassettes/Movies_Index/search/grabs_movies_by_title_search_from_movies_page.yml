---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=< movie_api_key >&language=en&page=1&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Aug 2021 21:19:59 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 85a9508ec4957ee0bf43a046eef1dce2.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX3-C3
      X-Amz-Cf-Id:
      - ZXd_4xHJ6phbMYrWST-5WjtVSOTLroQrSGI6FzdP14Bf-Ife1HUViw==
      Age:
      - '2'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 30 Aug 2021 21:20:01 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=< movie_api_key >&language=en&page=2&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Aug 2021 21:19:59 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 b9860cc9e4228861fb72cfbbb57c5bb3.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX3-C3
      X-Amz-Cf-Id:
      - Y3_GOdBIh1mBgcDERXV5Pl8EMbhLmzDLA1LzrNpbT5Ue334t8g25Cw==
      Age:
      - '2'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 30 Aug 2021 21:20:01 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie/?api_key=< movie_api_key >&page=1&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Aug 2021 21:20:01 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Location:
      - http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=1&query=titanic
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 bd41592b95ad3186fbc9028c3311be93.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX3-C3
      X-Amz-Cf-Id:
      - K9K_IbqSDC8E0AcuvmWepCoJStn7r7hmy_scjC1EI77tIyZlCgX5vw==
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Mon, 30 Aug 2021 21:20:01 GMT
- request:
    method: get
    uri: http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=1&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Aug 2021 21:20:00 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 0fad40f1c8b2873ec54a548e6658b271.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX3-C3
      X-Amz-Cf-Id:
      - 9JjHBf68O9VtRnrgTSSoaK7GGvMRiTM0vNjTCzLZaN2dBk4RGfLxsQ==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 30 Aug 2021 21:20:01 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie/?api_key=< movie_api_key >&page=2&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Aug 2021 21:20:01 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Location:
      - http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=2&query=titanic
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 8e223aee1ca3f4c950e8d2a26c8a546b.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX3-C3
      X-Amz-Cf-Id:
      - nVfc8oVJkbR5L2juSe3ZYawFfxAQIdz_oq-XVR5sflN48VV_UZIReQ==
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Mon, 30 Aug 2021 21:20:01 GMT
- request:
    method: get
    uri: http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=2&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Aug 2021 21:20:00 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 42f9f0e9bd0296c3bb45648019b2dce5.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX3-C3
      X-Amz-Cf-Id:
      - JXuqCZbUQGCLaNseCF9oN-urMZM1fTl9_0VISY-BOTbnpU-fH89PzQ==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 30 Aug 2021 21:20:01 GMT
recorded_with: VCR 6.0.0
