---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie/?api_key=< movie_api_key >&page=1&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 29 Aug 2021 18:49:07 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Location:
      - http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=1&query=titanic
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 8dabec3009252f87adad4ea8e2f9d8f8.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - 9Vx0XVeau95hxMdR0R3axwYB4XJx6CQ4oCFvtPOwjvM6_Hx6ua8kpQ==
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Sun, 29 Aug 2021 18:49:07 GMT
- request:
    method: get
    uri: http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=1&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 29 Aug 2021 18:46:56 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 6152d4e35099aaa5ec23aec50cd7a8c5.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - 7A2UwTC9oZg_4lSxRDGWwcy_7JViJ692UnqMQEiyJjpPpWPQ2pTKww==
      Age:
      - '131'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNlZtRnFBcFFSeVpaem1pR09RcTJDOTJqeXZILmpwZyIsImdlbnJlX2lkcyI6WzE4LDEwNzQ5XSwiaWQiOjU5Nywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGl0YW5pYyIsIm92ZXJ2aWV3IjoiMTAxLXllYXItb2xkIFJvc2UgRGVXaXR0IEJ1a2F0ZXIgdGVsbHMgdGhlIHN0b3J5IG9mIGhlciBsaWZlIGFib2FyZCB0aGUgVGl0YW5pYywgODQgeWVhcnMgbGF0ZXIuIEEgeW91bmcgUm9zZSBib2FyZHMgdGhlIHNoaXAgd2l0aCBoZXIgbW90aGVyIGFuZCBmaWFuY8OpLiBNZWFud2hpbGUsIEphY2sgRGF3c29uIGFuZCBGYWJyaXppbyBEZSBSb3NzaSB3aW4gdGhpcmQtY2xhc3MgdGlja2V0cyBhYm9hcmQgdGhlIHNoaXAuIFJvc2UgdGVsbHMgdGhlIHdob2xlIHN0b3J5IGZyb20gVGl0YW5pYydzIGRlcGFydHVyZSB0aHJvdWdoIHRvIGl0cyBkZWF0aOKAlG9uIGl0cyBmaXJzdCBhbmQgbGFzdCB2b3lhZ2XigJRvbiBBcHJpbCAxNSwgMTkxMi4iLCJwb3B1bGFyaXR5IjoxMTIuMTEsInBvc3Rlcl9wYXRoIjoiLzl4alpTMnJsVnhtOFNGeDhrUEMzYUlHQ09ZUS5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTk3LTExLTE4IiwidGl0bGUiOiJUaXRhbmljIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuOSwidm90ZV9jb3VudCI6MTk2NjV9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2U5WFJpa2t5dGgwR3RHOFJrVTNYTm0wb01zQS5qcGciLCJnZW5yZV9pZHMiOlsyOCwxMiw1M10sImlkIjo0NDkxOCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGl0YW5pYyBJSSIsIm92ZXJ2aWV3IjoiT24gdGhlIDEwMHRoIGFubml2ZXJzYXJ5IG9mIHRoZSBvcmlnaW5hbCB2b3lhZ2UsIGEgbW9kZXJuIGx1eHVyeSBsaW5lciBjaHJpc3RlbmVkIFwiVGl0YW5pYyAyLFwiIGZvbGxvd3MgdGhlIHBhdGggb2YgaXRzIG5hbWVzYWtlLiBCdXQgd2hlbiBhIHRzdW5hbWkgaHVybHMgYW4gaWNlIGJlcmcgaW50byB0aGUgbmV3IHNoaXAncyBwYXRoLCB0aGUgcGFzc2VuZ2VycyBhbmQgY3JldyBtdXN0IGZpZ2h0IHRvIGF2b2lkIGEgc2ltaWxhciBmYXRlLiIsInBvcHVsYXJpdHkiOjU1LjY3MiwicG9zdGVyX3BhdGgiOiIvM2JodjZzZjNROEQzdGJVdnRQQ0NoM3ZkWXlBLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTAtMDgtMDciLCJ0aXRsZSI6IlRpdGFuaWMgSUkiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NC45LCJ2b3RlX2NvdW50IjoyNTZ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzNvU2hzUnZBeVppUVE1bFAyaHN6V045UmkwYi5qcGciLCJnZW5yZV9pZHMiOlsyOCwxOCwxMDc0OV0sImlkIjoxNjUzNSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGl0YW5pYyIsIm92ZXJ2aWV3IjoiVW5oYXBwaWx5IG1hcnJpZWQsIEp1bGlhIFN0dXJnZXMgZGVjaWRlcyB0byBnbyB0byBBbWVyaWNhIHdpdGggaGVyIHR3byBjaGlsZHJlbiBvbiB0aGUgdW5zaW5rYWJsZSBUaXRhbmljLiBIZXIgaHVzYmFuZCwgUmljaGFyZCBhbHNvIGFycmFuZ2VzIHBhc3NhZ2Ugb24gdGhlIGx1eHVyeSBsaW5lciBzbyBhcyB0byBoYXZlIGN1c3RvZHkgb2YgdGhlaXIgdHdvIGNoaWxkcmVuLiBBbGwgdGhpcyBmYWRlcyB0byBpbnNpZ25pZmljYW5jZSBvbmNlIHRoZSBzaGlwIGhpdHMgYW4gaWNlYmVyZy4iLCJwb3B1bGFyaXR5IjoxNS45NzYsInBvc3Rlcl9wYXRoIjoiLzIyRmg0VW94UDZlakwySUZ3czc2VEo4b1lsai5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTUzLTA0LTExIiwidGl0bGUiOiJUaXRhbmljIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNCwidm90ZV9jb3VudCI6NzZ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzgydFJBN1ZkZjdUd2R5SllJTFVoNkZ1WTg4TC5qcGciLCJnZW5yZV9pZHMiOls5OV0sImlkIjoxOTg5MDEsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRpdGFuaWM6IDEwMCBZZWFycyBPbiIsIm92ZXJ2aWV3IjoiVGhlIFwidW5zaW5rYWJsZVwiIGZsb2F0aW5nIHBhbGFjZSBzZXQgc2FpbCBmcm9tIFNvdXRoYW1wdG9uIG9uIDEwdGggQXByaWwgMTkxMiBvbiBoZXIgbWFpZGVuIHZveWFnZSB0byBOZXcgWW9yay4gQW4gaWNlYmVyZyBlbmRlZCB0aGlzIG1vbnVtZW50YWwgam91cm5leSA1IGRheXMgbGF0ZXIuIE9ubHkgNzA1IG9mIHRoZSBwYXNzZW5nZXJzIGFuZCBjcmV3IHN1cnZpdmVkLiBUaGlzIHByb2dyYW0gZmVhdHVyZXMgYW4gZXhjbHVzaXZlIGxvb2sgYXQgdGhlIFNlYSBDaXR5IE11c2V1bSBUaXRhbmljIEV4aGliaXQgaW4gU291dGhhbXB0b24sIGludGVydmlld3MgZnJvbSBib3RoIHN1cnZpdm9ycyBhbmQgdGhlIGNhc3Qgb2YgdGhlIGJsb2NrYnVzdGVyIGZpbG0uIiwicG9wdWxhcml0eSI6MjUuMDk1LCJwb3N0ZXJfcGF0aCI6Ii91QWFYZmFKcEtqbXNBM0YxS2dvd2NSSlBLUE0uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxMi0wNi0wMSIsInRpdGxlIjoiVGl0YW5pYzogMTAwIFllYXJzIE9uIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuOSwidm90ZV9jb3VudCI6MTh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2VkSGdYRXRQYnlWSVE3eEtiMWN2SkpxVFZoQS5qcGciLCJnZW5yZV9pZHMiOlsyOCwxOCwzNl0sImlkIjoxMTAyMSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJkZSIsIm9yaWdpbmFsX3RpdGxlIjoiVGl0YW5pYyIsIm92ZXJ2aWV3IjoiVGhpcyBsaXR0bGUta25vd24gR2VybWFuIGZpbG0gcmV0ZWxscyB0aGUgdHJ1ZSBzdG9yeSBvZiB0aGUgQnJpdGlzaCBvY2VhbiBsaW5lciB0aGF0IG1ldCBhIHRyYWdpYyBmYXRlLiBFcm5zdCBGcml0eiBGw7xyYnJpbmdlciBwbGF5cyB0aGUgcHJlc2lkZW50IG9mIHRoZSBXaGl0ZSBTdGFyIExpbmUsIHdobyB1bndpc2VseSBwcmVzc2VkIHRoZSBUaXRhbmljJ3MgY2FwdGFpbiAoT3R0byBXZXJuaWNrZSkgdG8gbWFrZSB0aGUgc3dpZnRlc3QgcG9zc2libGUgY3Jvc3NpbmcgdG8gTmV3IFlvcmsuIEludGVyZXN0aW5nbHksIGRpcmVjdG9yIEhlcmJlcnQgU2VscGluIHdhcyBhcnJlc3RlZCBieSB0aGUgR2VzdGFwbyBkdXJpbmcgdGhpcyBmaWxtJ3MgcHJvZHVjdGlvbiwgYW5kIEdlcm1hbiBjZW5zb3JzIGJhbm5lZCB0aGUgZmlsbSBmb3IgaXRzIHNjZW5lcyBvZiBwYW5pYyBhbmQgdGVycm9yLiIsInBvcHVsYXJpdHkiOjguMzEsInBvc3Rlcl9wYXRoIjoiL0FsN29JWFE0ZFpBb2ZCVFpXbTZPaVhTM01FYS5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTQzLTExLTEwIiwidGl0bGUiOiJUaXRhbmljIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYsInZvdGVfY291bnQiOjQyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii80U2RkdzFCRlFGSE9JUVozRFk3UVMwbUduVmUuanBnIiwiZ2VucmVfaWRzIjpbMTYsMTA3NTFdLCJpZCI6NzEyMzUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiaXQiLCJvcmlnaW5hbF90aXRsZSI6IlRpdGFuaWM6IExhIGxlZ2dlbmRhIGNvbnRpbnVhIiwib3ZlcnZpZXciOiJBbiBhbmltYXRlZCByZXRlbGxpbmcgb2YgdGhlIHdvcnN0IHBhc3NlbmdlciBzaGlwIGRpc2FzdGVyIGluIGhpc3RvcnkuIEluIHRoaXMgdmVyc2lvbiwgbG92ZSBibG9zc29tcyBiZXR3ZWVuIHRoZSB1cHBlci1jbGFzcyBTaXIgV2lsbGlhbSBhbmQgdGhlIGJsdWUtY29sbGFyIEFuZ2VsaWNhLCB3aG8gaXMgaG9waW5nIHRvIGZpbmQgcm9tYW5jZSBpbiBBbWVyaWNhLiBBdCB0aGUgc2FtZSB0aW1lLCB0aGVyZSBhcmUgYWxzbyBhIG51bWJlciBvZiBhbmltYWwgcGFzc2VuZ2VycywgaW5jbHVkaW5nIHRhbGtpbmcgZG9ncywgY2F0cyBhbmQgbWljZSwgd2hvIGFyZSBhbHNvIGxvb2tpbmcgZm9yd2FyZCB0byBhcnJpdmluZyBpbiB0aGUgTmV3IFdvcmxkLiIsInBvcHVsYXJpdHkiOjkuNDU3LCJwb3N0ZXJfcGF0aCI6Ii9zMVBIUlNsb3MyaElGcnRBOFplMEp5YkpUR2IuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwMC0wOS0xNSIsInRpdGxlIjoiVGl0YW5pYzogVGhlIExlZ2VuZCBHb2VzIE9uLi4uIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjIuMSwidm90ZV9jb3VudCI6NDR9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3hTc3NXNTNhMnMyZXVDZHlJNGFFcHp5WmZiMS5qcGciLCJnZW5yZV9pZHMiOls4NzgsMjgsMTIsMzVdLCJpZCI6NDY3ODM5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJBbGllbnMgdnMuIFRpdGFuaWMiLCJvdmVydmlldyI6Ik9mZmVyaW5nIG9ubHkgdGhlIGZpbmVzdCBhbWVuaXRpZXMsIHRoZSDigJhUSVRBTiAxQ+KAmSBzcGFjZS1jcnVpc2VyIGlzIGNvbnNpZGVyZWQgdGhlIG1vc3QgbHV4dXJpb3VzIHN0YXItbGluZXIgZXZlciBidWlsdC4gRnV0dXJlIHNwcmluZy1icmVha2VycyBvbiBib2FyZCBhcmUgZXhjaXRlZCB0byBiZSB0b3VyaW5nIHRocm91Z2ggc3BhY2Ugd2l0aCBzb21lIG9mIHRoZSB3b3JsZOKAmXMgZWxpdGUuIEhvd2V2ZXIsIGEgc3VkZGVuIG1ldGVvciBzdG9ybSBzbWFzaGVzIGludG8gdGhlIGh1bGwsIGFuZCBhIGRlYWRseSBiaW9sb2dpY2FsIGFsaWVuIGxpZmUgZm9ybSBpcyBsZXQgbG9vc2Ugb24gdGhlIHNoaXAuICBTZWVraW5nIGEgc3VpdGFibGUgaG9zdCwgdGhlIHJldHJvdmlydXMgc3VjY2Vzc2Z1bGx5IG1lcmdlcyB3aXRoIHNvbWUgdGhlIHBhc3NlbmdlcnMsIHRyYW5zZm9ybWluZyB0aGVtIGludG8gc2VlbWluZ2x5IGludmluY2libGUgcHJlZGF0b3JzIHdpdGggdGhlIOKAnHRvdWNoIG9mIGRlYXRo4oCdLiBBcyB0aGUgc2hpcCBpcyBkZXN0cm95ZWQsIHRoZSBzdXJ2aXZpbmcgcGFzc2VuZ2VycyBjcmFzaCBvbiBhIHJlbW90ZSBwbGFuZXQsIGFuZCB0aGV5IGxlYXJuIHRoYXQgb25lIG9mIHRoZW0gaXMg4oCcaW5mZWN0ZWTigJ0uIFRoZXkgbXVzdCBxdWlja2x5IGJhbmQgdG9nZXRoZXIgYmVmb3JlIGl0IGhhcyBhIGNoYW5jZSB0byBzbGF1Z2h0ZXIgdGhlbSBhbGwuIiwicG9wdWxhcml0eSI6Ny44MTYsInBvc3Rlcl9wYXRoIjoiL2JsUkVPZDA1aHl2YmlBM1FjNkJxQ0o3dW52Qy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE3LTA5LTE4IiwidGl0bGUiOiJBbGllbnMgdnMuIFRpdGFuaWMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NC45LCJ2b3RlX2NvdW50IjoxMn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvcTNiOFZpMlc2ajcyYVhLZ2dpVm9EbkV5RGdVLmpwZyIsImdlbnJlX2lkcyI6WzEyXSwiaWQiOjI0NTc1LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJSYWlzZSB0aGUgVGl0YW5pYyIsIm92ZXJ2aWV3IjoiVG8gb2J0YWluIGEgc3VwcGx5IG9mIGEgcmFyZSBtaW5lcmFsLCBhIHNoaXAgcmFpc2luZyBvcGVyYXRpb24gaXMgY29uZHVjdGVkIGZvciB0aGUgb25seSBrbm93biBzb3VyY2UsIHRoZSBUaXRhbmljLiIsInBvcHVsYXJpdHkiOjguNzQxLCJwb3N0ZXJfcGF0aCI6Ii9iZVlOTGo0NEZPZFY0N3RvbVh1SnlQa3ZDS2wuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk4MC0wOC0wMSIsInRpdGxlIjoiUmFpc2UgdGhlIFRpdGFuaWMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NS42LCJ2b3RlX2NvdW50Ijo1Nn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzM1LDI3XSwiaWQiOjQyNDAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRpdGFuaWMgMjAwMCIsIm92ZXJ2aWV3IjoiVGhlIGx1eHVyeSBsaW5lciBUaXRhbmljIDIwMDAgaGFzIHNldCBzYWlsIG9uIGl0cyBtYWlkZW4gdm95YWdlLCBhbmQgb25lIG9mIHRoZSBwYXNzZW5nZXJzIGlzIHRoZSB2YW1waXJlIFZsYWRhbWluYS4gVmxhZGFtaW5hIGlzIHNlYXJjaGluZyBmb3IgYSB3b21hbiBzaGUgY2FuIHR1cm4gaW50byBhIHZhbXBpcmUgcXVlZW4sIGFuZCBmcnVzdHJhdGVkIHJvY2sgZ3JvdXBpZSBTaGFyaSBsb29rcyB0byBiZSBhIHBlcmZlY3QgdGFyZ2V0LiBBcyB2YXJpb3VzIHBlb3BsZSBnZXQgc2VkdWNlZCBhbmQvb3Iga2lsbGVkIGFzIHRoZSBsaW5lciBjb250aW51ZXMgb24gaXRzIGRvb21lZCB2b3lhZ2UsIFNoYXJpIG11c3QgY2hvc2UgYmV0d2VlbiBldGVybml0eSBhcyBhIGxpdmluZyBkZWFkIHNleCBzbGF2ZSBvciBhIGZyaWdpZCBncmF2ZSBhdCB0aGUgYm90dG9tIG9mIHRoZSBvY2Vhbi4iLCJwb3B1bGFyaXR5Ijo2LjgxOCwicG9zdGVyX3BhdGgiOiIvdzhLekdwaFNHSURjVWhIbWRSYnF4WVhJOGtlLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5OTktMDEtMDEiLCJ0aXRsZSI6IlRpdGFuaWMgMjAwMCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjozLjQsInZvdGVfY291bnQiOjh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3NkdGZ3WnVsRXJiUTd5OVJWYmFPdVdWb3VENi5qcGciLCJnZW5yZV9pZHMiOlszNiwxOCw1M10sImlkIjo4NjkzOCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiUy5PLlMuIFRpdGFuaWMiLCJvdmVydmlldyI6IlRoZSBUaXRhbmljIGRpc2FzdGVyIGlzIGRlcGljdGVkIGFzIHNlZW4gdGhyb3VnaCB0aGUgZXllcyBvZiBvbmUgY291cGxlIGluIGVhY2ggb2YgdGhlIHRocmVlIGNsYXNzZXMgb24gYm9hcmQuIiwicG9wdWxhcml0eSI6My45NTEsInBvc3Rlcl9wYXRoIjoiL3d5NXV0MkdWcFBhTnh4WEZSZGtJeXdqUnBlTy5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTc5LTA5LTIzIiwidGl0bGUiOiJTLk8uUy4gVGl0YW5pYyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjIsInZvdGVfY291bnQiOjI0fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbOTksMzZdLCJpZCI6NTMwMTA4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgVW5zaW5rYWJsZSBUaXRhbmljIiwib3ZlcnZpZXciOiJPbiBBcHJpbCAxMCwgMTkxMiwgdGhlIFJNUyBUaXRhbmljIGVtYmFya2VkIG9uIGl0cyBtYWlkZW4gdm95YWdlLCBzYWlsaW5nIGZyb20gU291dGhhbXB0b24sIEVuZ2xhbmQsIHRvIE5ldyBZb3JrIENpdHkuIE9uZSBvZiB0aGUgbGFyZ2VzdCBhbmQgbW9zdCBsdXh1cmlvdXMgcGFzc2VuZ2VyIGxpbmVycyBhdCB0aGUgdGltZSwgdGhlIFRpdGFuaWMgd2FzIGFsc28gZXF1aXBwZWQgd2l0aCB3YXRlcnRpZ2h0IGNvbXBhcnRtZW50cywgd2hpY2ggbGVkIG1hbnkgdG8gY29uc2lkZXIgdGhlIHNoaXAgdW5zaW5rYWJsZTsgYW4gYW5vbnltb3VzIGRlY2toYW5kIGZhbW91c2x5IGNsYWltZWQgdGhhdCDigJxHb2QgaGltc2VsZiBjb3VsZCBub3Qgc2luayB0aGlzIHNoaXAu4oCdIE9uIEFwcmlsIDE0LCBob3dldmVyLCB0aGUgc2hpcCBzdHJ1Y2sgYW4gaWNlYmVyZywgYW5kIGVhcmx5IHRoZSBuZXh0IGRheSBpdCBzYW5rLiBTb21lIDEsNTAwIHBlb3BsZSBwZXJpc2hlZC4iLCJwb3B1bGFyaXR5Ijo0LjU3MywicG9zdGVyX3BhdGgiOiIvbTNweTFKb09QTTNzM1JUUnY5NjV0TUM4RnF5LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMDgtMTEtMDMiLCJ0aXRsZSI6IlRoZSBVbnNpbmthYmxlIFRpdGFuaWMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6OSwidm90ZV9jb3VudCI6MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzE2LDEwNzUxXSwiaWQiOjQ0MzEwLCJvcmlnaW5hbF9sYW5ndWFnZSI6Iml0Iiwib3JpZ2luYWxfdGl0bGUiOiJMYSBsZWdnZW5kYSBkZWwgVGl0YW5pYyIsIm92ZXJ2aWV3IjoiT2xkIEdyYW5kcGEgbW91c2UgdGVsbHMgdG8gaGlzIGdyYW5kY2hpbGRyZW4gdGhlIFwicmVhbFwiIHN0b3J5IG9mIHRoZSBUaXRhbmljIGRpc2FzdGVyLCBpbmNsdWRpbmcgZXZpbCBzaGFya3MsIGEgZ2lhbnQgb2N0b3B1cywgYW5kIGFuIGV2aWwgd2hhbGluZyBzY2hlbWUuIiwicG9wdWxhcml0eSI6My45MzgsInBvc3Rlcl9wYXRoIjoiLzcySVRLa2RhbkFNVGVYY3pIUFNQVFQybHZmNi5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTk5LTAxLTAxIiwidGl0bGUiOiJUaGUgTGVnZW5kIG9mIHRoZSBUaXRhbmljIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjMuMiwidm90ZV9jb3VudCI6MzB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2hEZmFhM05qM0szU2tYQnI4ZUFMWWZQVDVwRi5qcGciLCJnZW5yZV9pZHMiOls5OV0sImlkIjo0Mjg5NTAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkRyYWluIHRoZSBUaXRhbmljIiwib3ZlcnZpZXciOiJDb21wdXRlci1nZW5lcmF0ZWQgaW1hZ2VyeSBhbmQgb3RoZXIgdmlzdWFsaXphdGlvbiB0ZWNobmlxdWVzIHJldmVhbCBob3cgaXQgd291bGQgbG9vayBpZiBhbGwgdGhlIHdhdGVyIHdhcyByZW1vdmVkIGZyb20gUk1TIFRpdGFuaWMncyBmaW5hbCByZXN0aW5nIHBsYWNlLiIsInBvcHVsYXJpdHkiOjMuNzc2LCJwb3N0ZXJfcGF0aCI6Ii82OEZwcHNucGMzT21RSzhrSXVzdGZmcnhIYnEuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNi0wNS0wNSIsInRpdGxlIjoiRHJhaW4gdGhlIFRpdGFuaWMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4zLCJ2b3RlX2NvdW50IjoxMH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6Wzk5XSwiaWQiOjQyMTY1Nywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiSW5zaWRlIHRoZSBUaXRhbmljIiwib3ZlcnZpZXciOiJBbiBhbWJpdGlvdXMgZmFjdHVhbCBkcmFtYSB0aGF0IHJldmVhbHMgbW9tZW50IGJ5IG1vbWVudCBleGFjdGx5IGhvdyB0aGUgVGl0YW5pYyBzYW5rLCB0ZWxsaW5nIHRoZSB1bnRvbGQgc3RvcmllcyBvZiB0aGUgZW5naW5lZXJzIGFuZCBzdG9rZXJzIHdobyBiYXR0bGVkIHRoZSBpY3kgd2F0ZXIuIiwicG9wdWxhcml0eSI6My45MzgsInBvc3Rlcl9wYXRoIjoiL2pESGVvclJXTHV6eVhTVUdWWDQ3T1NkV3ZWTS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEyLTAzLTIyIiwidGl0bGUiOiJJbnNpZGUgdGhlIFRpdGFuaWMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny41LCJ2b3RlX2NvdW50IjoyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbMzVdLCJpZCI6NDI4NjE1LCJvcmlnaW5hbF9sYW5ndWFnZSI6InJvIiwib3JpZ2luYWxfdGl0bGUiOiJUaXRhbmljIHZhbHMiLCJvdmVydmlldyI6IkJhc2VkIG9uIGEgcGxheSBieSBUdWRvciBNdciZYXRlc2N1LCBUaXRhbmljIFZhbHMgaXMgdGhlIGVzc2VuY2Ugb2YgUm9tYW5pYW4gZ2VuaXVzIGluIGNvbWVkeSwgd2l0aCBhbWF6aW5nIHBlcmZvcm1hbmNlcyBhbmQgdGhlIGJlYXV0aWZ1bCBhYnN1cmQgb2YgdGhlIHF1b3RpZGlhbi4iLCJwb3B1bGFyaXR5IjoxLjk2LCJwb3N0ZXJfcGF0aCI6Ii9lenIwMFNtMUg2UWxxN2hSclVaUTlJUDdQRjMuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk2NC0xMi0wMiIsInRpdGxlIjoiVGl0YW5pYyBXYWx0eiIsInZpZGVvIjp0cnVlLCJ2b3RlX2F2ZXJhZ2UiOjcsInZvdGVfY291bnQiOjR9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL21Fb1U3MWcwU2pUREVpTVR5UmoxYlYyRWZJcC5qcGciLCJnZW5yZV9pZHMiOls5OV0sImlkIjoyMTMzNjIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlJlZmxlY3Rpb25zIG9uIFRpdGFuaWMiLCJvdmVydmlldyI6IkFuIGVudGhyYWxsaW5nIGFuZCBmYXN0LXBhY2VkIGZvdXItcGFydCBkb2N1bWVudGFyeSBmZWF0dXJlIHRoYXQgY292ZXJzIHRoZSBtYWtpbmcgb2Ygb25lIG9mIHRoZSBsYXN0IG1ham9yIEhvbGx5d29vZCBlcGljczsgVGl0YW5pYy4gQ2FzdCBhbmQgY3JldyBzcGVhayBvbiBzZXR0aW5nIHRoZSBzaW5raW5nIG9mIHRoZSBzaGlwIGFnYWluc3QgYSBjbGFzc2ljIHJvbWFuY2UuIFRoZSBmZWF0dXJlIGFsc28gZXhhbWluZXMgY2FzdGluZyBhbmQgdGhlIHlvdW5nIGNvdXBsZSBoZWFkbGluaW5nIHRoZSBmaWxtLCBEaUNhcHJpbydzIGFuZCBXaW5zbGV0J3Mgb24tc2V0IGZyaWVuZHNoaXAgYW5kIHRoZWlyIGRpZmZlcmluZyBhY3Rpbmcgc3R5bGVzLCB0aGUgZXhwYW5zaXZlIHNldHMgYW5kIGZpbG1pbmcgbG9jYXRpb25zLCB0aGUgYXV0aGVudGljaXR5IG9mIHRoZSByZWNyZWF0ZWQgc2hpcCwgSmFtZXMgQ2FtZXJvbidzIHdvcmsgYW5kIGRlZGljYXRpb24sIGFuZCBidWRnZXRpbmcuIEFuZCBtYW55IG1vcmUgYXNwZWN0cyBvZiB0aGUgZmlsbSBhcmUgb3ZlcnZpZXdlZC4iLCJwb3B1bGFyaXR5IjozLjYzMywicG9zdGVyX3BhdGgiOm51bGwsInJlbGVhc2VfZGF0ZSI6IjIwMTItMDktMTAiLCJ0aXRsZSI6IlJlZmxlY3Rpb25zIG9uIFRpdGFuaWMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4zLCJ2b3RlX2NvdW50IjoxOH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIveUZEMDVmWmpKS2daNHQ3TEdKQjJJTFBkWjJYLmpwZyIsImdlbnJlX2lkcyI6WzM2XSwiaWQiOjI4NzM0Nywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGl0YW5pYzogVGhlIEFmdGVybWF0aCIsIm92ZXJ2aWV3IjoiRXhwbG9yZXMgd2hhdCBoYXBwZW5lZCBhZnRlciB0aGUgVGl0YW5pYyBzYW5rOiB0aGUgbGl2ZXMgdGhlIGRpc2FzdGVyIGFmZmVjdGVkIGFuZCB0aGUgY2hhbmdlcyBpdCBicm91Z2h0IHRvIHNlYSB0cmF2ZWwuIiwicG9wdWxhcml0eSI6Mi4zNzcsInBvc3Rlcl9wYXRoIjoiLzNMcW9VTm5iSEFvbERYSTJwTFBFWGtvOXdGdC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEyLTA0LTAxIiwidGl0bGUiOiJUaXRhbmljOiBUaGUgQWZ0ZXJtYXRoIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzlQb2xWb2dadUhkMDdKSVBPUFREbkZBRmoxcC5qcGciLCJnZW5yZV9pZHMiOls5OV0sImlkIjo0ODk0OTMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRpdGFuaWM6IDIwIFllYXJzIExhdGVyIHdpdGggSmFtZXMgQ2FtZXJvbiIsIm92ZXJ2aWV3IjoiRm9yIHRoZSAyMHRoIGFubml2ZXJzYXJ5IG9mIFwiVGl0YW5pYyxcIiBKYW1lcyBDYW1lcm9uIHJlb3BlbnMgdGhlIGZpbGUgb24gdGhlIGRpc2FzdGVyLiIsInBvcHVsYXJpdHkiOjUuMDksInBvc3Rlcl9wYXRoIjoiLzV3MThQOHFVOXNIUmNXNnBIM05WR1ZWSUtGdy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE3LTExLTI2IiwidGl0bGUiOiJUaXRhbmljOiAyMCBZZWFycyBMYXRlciB3aXRoIEphbWVzIENhbWVyb24iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni4zLCJ2b3RlX2NvdW50IjoyM30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6W10sImlkIjo3NjA1MjQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRpdGFuaWMiLCJvdmVydmlldyI6IlwiVGl0YW5pY1wiIGlzIGEgUHVuamFiaSBmZWF0dXJlIGZpbG0uIEl0IGlzIGZhbWlseSBtb3ZpZS4gXCJUaXRhbmljXCIgaXMgYmFzZWQgb24gYSB5b3VuZyBib3kncyBsaWZlIHdob3NlIGRyZWFtcyBhcmUgc28gaGlnaC4gSGUgd2FudHMgdG8gam9pbiBJbmRpYW4gTmF2eS4gVW5mb3J0dW5hdGVseSBoaXMgbGlmZSBjb21wbGV0ZWx5IGNoYW5nZWQgZHVlIHRvIHdlZWsgZmluYW5jaWFsIGNvbmRpdGlvbnMgYXQgaG9tZS4gSGUgc3RhcnRzIGhpcyB3b3JrIGF0IGxvdyBsZXZlbCBkcml2aW5nIG9mIEF1dG9yaWtzaGEuIEhlIHdvcmtzIHNvIGhhcmQgYW5kIGhlIGZhY2VzIG1hbnkgb2JzdGFjbGVzIGluIHRoaXMgd29yay4gQXQgdGhlIGVuZCBoZSBhY2NlcHRlZCB0aGF0IGhpcyB2ZWhpY2xlIGlzIHN1Ym1hcmluZSBmb3IgaGltLiIsInBvcHVsYXJpdHkiOjEuNTc2LCJwb3N0ZXJfcGF0aCI6bnVsbCwicmVsZWFzZV9kYXRlIjoiMjAxOC0xMi0yMSIsInRpdGxlIjoiVGl0YW5pYyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii92NmtVQzJkc0R3U2Zod0NXZEFnbGRYQjdLbnUuanBnIiwiZ2VucmVfaWRzIjpbOTksMTgsMTA3NzBdLCJpZCI6MTAyMzcwLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTYXZpbmcgdGhlIFRpdGFuaWMiLCJvdmVydmlldyI6IkluIHRoZSBob3VycyBhZnRlciB0aGUgVGl0YW5pYyBzdHJ1Y2sgYW4gaWNlYmVyZyAxMDAgeWVhcnMgYWdvLCBhIHRlYW0gb2Ygc2hpcGJ1aWxkZXJzIGFuZCBlbmdpbmVlcnMgcmFjZWQgYWdhaW5zdCB0aW1lIHRvIHNhdmUgdGhlIHN0cmlja2VuIHZlc3NlbC4gIEJhc2VkIG9uIGV5ZS13aXRuZXNzIGFjY291bnRzLCB0aGlzIGZpbG0gcmV2ZWFscyB3aGF0IHdlbnQgb24gYmVsb3cgZGVja3MgaW4gdGhlIGhvdXJzIGJlZm9yZSB0aGUgVGl0YW5pYyBzYW5rLCB0ZWxsaW5nIHRoZSBwcmV2aW91c2x5IHJlbGF0aXZlbHkgdW5oZXJhbGRlZCBzdG9yaWVzIG9mIGVuZ2luZWVycyB3aG8gZm91Z2h0IGNvdXJhZ2VvdXNseSB0byBob2xkIGJhY2sgdGhlIHBvd2VyIG9mIHRoZSBzZWEgYW5kIGtlZXAgdGhlIHBvd2VyIHN5c3RlbXMgcnVubmluZywgZXZlbiB3aGVuIHRoZXkgbGVhcm5lZCB0aGF0IGFsbCB3YXMgbG9zdC4gIE1vc3Qgb2YgdGhlc2UgbWVuIGRpZWQgYnV0IHRoZWlyIGFjdGlvbnMgYm91Z2h0IGVub3VnaCB0aW1lIHRvIHNhdmUgbWFueSBsaXZlcy4gIFRoaXMgZHJhbWEtZG9jdW1lbnRhcnkgdGVsbHMgYSBwb2lnbmFudCBzdG9yeSBvZiBzZWxmLXNhY3JpZmljZSBieSB0aGUgVGl0YW5pYydzIGVuZ2luZWVycywgc3Rva2VycyBhbmQgZmlyZW1lbiBpbiB0aGUgZmFjZSBvZiBpbXBlbmRpbmcgZGVhdGguIiwicG9wdWxhcml0eSI6Mi4wNTcsInBvc3Rlcl9wYXRoIjoiL2dlaThrZzBLb3V5UEpLVW14RHdUTlNuQlVUVi5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEyLTA0LTE1IiwidGl0bGUiOiJTYXZpbmcgdGhlIFRpdGFuaWMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4zLCJ2b3RlX2NvdW50Ijo2fV0sInRvdGFsX3BhZ2VzIjo3LCJ0b3RhbF9yZXN1bHRzIjoxMzR9
  recorded_at: Sun, 29 Aug 2021 18:49:07 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie/?api_key=< movie_api_key >&page=2&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 29 Aug 2021 18:49:07 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Location:
      - http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=2&query=titanic
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 4a7d33ed6e1269d258afa1464fe1d544.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - 8HHhvvDn2dgETdTqOxoH7CMHQH9gRezTYlGva6iAMTZH9SLS_Qhxaw==
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Sun, 29 Aug 2021 18:49:07 GMT
- request:
    method: get
    uri: http://api.themoviedb.org/3/search/movie?api_key=< movie_api_key >&page=2&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 29 Aug 2021 18:46:57 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 30a008d85df71a65d24879648931496c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      X-Amz-Cf-Id:
      - Q5OHnbLr3S6ijWWwYNcfVglUSsoQaqcdJaT-_6hcf9dhfTK_RIeFeA==
      Age:
      - '130'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 29 Aug 2021 18:49:07 GMT
recorded_with: VCR 6.0.0
